name: pre-merge check

on: 
  push:
    branches:
    - master
    - feature/*
  pull_request:
    branches:
    - master

jobs:
  cmake-build:
    name: cmake build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        go-version: [1.12.x, 1.13.x]

    steps:
    - name: setup go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/checkout@v1
    - name: cmake-cache-ubuntu
      if: matrix.os == 'ubuntu-latest'
      uses: actions/cache@v1
      id: cache
      with:
        path: cache/cmake
        key: ${{ runner.os }}-cmake-3.15.5-x64
    - name: cmake-get
      if: matrix.os == 'ubuntu-latest' && steps.cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p cache/cmake
        cd cache/cmake
        wget https://github.com/Kitware/CMake/releases/download/v3.15.5/cmake-3.15.5-Linux-x86_64.tar.gz
        cd ../..
    - name: cmake-setting
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd cache/cmake
        tar zxvf cmake-3.15.5-Linux-x86_64.tar.gz
        chmod +x cmake-3.15.5-Linux-x86_64/bin/cmake
        chmod +x cmake-3.15.5-Linux-x86_64/bin/ctest
        ls -l cmake-3.15.5-Linux-x86_64/bin
        cd ../..
    - name: ubuntu-install
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt install opensc-pkcs11
    - name: cmake
      run: |
        export CURRENT_DIR=$(pwd)
        export PATH="$CURRENT_DIR/cache/cmake/cmake-3.15.5-Linux-x86_64/bin:$PATH"
        cmake --version
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DTARGET_RPATH="/usr/local/lib;/usr/local/lib64"
        make
        cd ..
    - name: go build
      run: go build
    - name: after
      run: rm -rf cache/cmake/cmake-3.15.5-Linux-x86_64
